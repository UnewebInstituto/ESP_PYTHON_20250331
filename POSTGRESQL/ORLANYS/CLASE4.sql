--ORDENAMIENTO DE DATOS
--ASCENDENTE POR OMISION
SELECT * FROM VISTA_PROV_PROD
ORDER BY PRODUCTO;

--DESCENDENTE
SELECT * FROM VISTA_PROV_PROD
ORDER BY PRODUCTO DESC;

--COMBINACIÒN DE ORDENAMIENTO
SELECT * FROM VISTA_PROV_PROD
ORDER BY PRODUCTO DESC, PRECIO ASC;

--AGRUPAMIENTO DE DATOS
--SE PUEDEN EMPLEAR 2 CLAUSULAS:
--1) DISTINCT
--2) GROUP BY

--1) Caso 1
SELECT DISTINCT PRODUCTO FROM VISTA_PROV_PROD;

--2) Caso 2
SELECT PRODUCTO FROM VISTA_PROV_PROD GROUP BY PRODUCTO;

--AMBOS CASOS PERMITEN EL ORDENAMIENTO:
--ASCENDENTE
SELECT DISTINCT PRODUCTO FROM VISTA_PROV_PROD ORDER BY PRODUCTO;
SELECT PRODUCTO FROM VISTA_PROV_PROD GROUP BY PRODUCTO ORDER BY PRODUCTO;

--DESCENDENTE
SELECT DISTINCT PRODUCTO FROM VISTA_PROV_PROD ORDER BY PRODUCTO DESC;
SELECT PRODUCTO FROM VISTA_PROV_PROD GROUP BY PRODUCTO ORDER BY PRODUCTO DESC;

--EJEMPLO:
SELECT  MAX(PRECIO) FROM VISTA_PROV_PROD WHERE PROVEEDOR = 'GE';
SELECT  MIN(PRECIO) FROM VISTA_PROV_PROD WHERE PROVEEDOR = 'GE';
SELECT  AVG(PRECIO) FROM VISTA_PROV_PROD WHERE PROVEEDOR = 'GE';
SELECT  SUM(EXISTENCIA) FROM VISTA_PROV_PROD WHERE PROVEEDOR = 'GE';

-UTILIZANDO AGRUPAMIENTO:
SELECT PROVEEDOR, MAX(PRECIO), MIN(PRECIO), AVG(PRECIO), SUM(EXISTENCIA) FROM VISTA_PROV_PROD GROUP BY PROVEEDOR;

-- UTILIZANDO AGRUPAMIENTO Y APLICANDO ALIAS:
SELECT PROVEEDOR, MAX(PRECIO), AS "Precio màximo" MIN(PRECIO), AS "Precio mìnimo" ROUND(AVG(PRECIO),2), AS "Precio promedio" SUM(EXISTENCIA) AS "Cantidad de existencia" FROM VISTA_PROV_PROD GROUP BY PROVEEDOR;

-- UTILIZANDO AGRUPAMIENTO Y APLICANDO ALIAS Y ORDENANDO POR EL NOMBRE DEL PROVEEDOR:
SELECT PROVEEDOR AS "Proveedor", MAX(PRECIO) AS "Precio màximo", MIN(PRECIO) AS "Precio mìnimo", ROUND(AVG(PRECIO),2) AS "Precio promedio", SUM(EXISTENCIA) AS "Cantidad de existencia" FROM VISTA_PROV_PROD GROUP BY PROVEEDOR ORDER BY PROVEEDOR;

--Otra forma
SELECT PROVEEDOR AS proveedor, MAX(PRECIO) AS precio_maximo, MIN(PRECIO) AS precio_minimo, ROUND(AVG(PRECIO),2) AS precio_promedio, SUM(EXISTENCIA) AS cantidad_en_existencia
FROM VISTA_PROV_PROD GROUP BY PROVEEDOR ORDER BY PROVEEDOR;

--ASOCIACION DE MUCHOS A MUCHOS

CREATE TABLE alumnos(
  id serial,
  NOMBRE varchar (80),
  apellido varchar (80),
  primary key (id)
);

CREATE TABLE asignatura(
  id serial,
  NOMBRE varchar (80),
  descripcion text,
  primary key (id)
);

CREATE TABLE alumnos_asignatura(
  alumno_id integer,
  asignatura_id integer,
   primary key (alumno_id, asignatura_id),
   foreign key(alumno_id) references alumnos(id) on delete cascade on update cascade,
    foreign key(asignatura_id) references asignatura(id) on delete cascade on update cascade
);